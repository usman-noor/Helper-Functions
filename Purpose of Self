https://stackoverflow.com/questions/2709821/what-is-the-purpose-of-self
Let's say you have a class ClassA which contains a method methodA defined as:

def methodA(self, arg1, arg2):
    # do something
and ObjectA is an instance of this class.

Now when ObjectA.methodA(arg1, arg2) is called, python internally converts it for you as:

ClassA.methodA(ObjectA, arg1, arg2)
The self variable refers to the object itself.
When objects are instantiated, the object itself is passed into the self parameter.

When objects are instantiated, the object itself is passed into the self parameter.


When objects are instantiated, the object itself is passed into the self parameter.

enter image description here

class A: 
    foo = []
a, b = A(), A()
a.foo.append(5)
b.foo
ans: [5]

class A: 
    def __init__(self): 
        self.foo = []
a, b = A(), A()
a.foo.append(5)
b.foo
ans: []
